name: ðŸ“¦ Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release:
    name: ðŸš€ Create Release
    runs-on: ubuntu-latest
    
    steps:
    - name: ðŸ“¥ Checkout Code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: ðŸ“‹ Generate Release Notes
      id: release_notes
      run: |
        # Extract version from tag
        VERSION=${GITHUB_REF#refs/tags/}
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        
        # Generate release notes from CHANGELOG
        echo "## ðŸŒŸ Starbridge Platform $VERSION" > release_notes.md
        echo "" >> release_notes.md
        echo "### What's Changed" >> release_notes.md
        
        # Extract relevant section from CHANGELOG if it exists
        if grep -q "$VERSION" CHANGELOG.md; then
          # Get the section for this version
          sed -n "/## \[$VERSION\]/,/## \[/p" CHANGELOG.md | head -n -1 >> release_notes.md
        else
          echo "- See CHANGELOG.md for detailed changes" >> release_notes.md
        fi
        
        echo "" >> release_notes.md
        echo "### ðŸš€ Quick Deploy" >> release_notes.md
        echo '```bash' >> release_notes.md
        echo 'git clone https://github.com/danpet-dev/starbridge-platform.git' >> release_notes.md
        echo 'cd starbridge-platform' >> release_notes.md
        echo 'make help' >> release_notes.md
        echo '```' >> release_notes.md

    - name: ðŸŽ¯ Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: ðŸš€ Starbridge Platform ${{ steps.release_notes.outputs.version }}
        body_path: release_notes.md
        draft: false
        prerelease: ${{ contains(github.ref, 'alpha') || contains(github.ref, 'beta') || contains(github.ref, 'rc') }}

    - name: ðŸ“Š Update Release Statistics
      run: |
        echo "ðŸŽ‰ Released version ${{ steps.release_notes.outputs.version }}"
        echo "ðŸ“ˆ Repository statistics:"
        echo "- Total files: $(find . -type f | wc -l)"
        echo "- Kubernetes manifests: $(find . -name "*.yaml" -o -name "*.yml" | wc -l)"
        echo "- Documentation files: $(find . -name "*.md" | wc -l)"
        echo "- Makefile targets: $(grep -c "^[a-zA-Z_-]*:" Makefile)"