apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres-vault-enhanced
  labels:
    app: postgres
    vault-enabled: "true"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
        vault-enabled: "true"
      annotations:
        vault.hashicorp.com/agent-inject: "true"
        vault.hashicorp.com/role: "postgres"
        vault.hashicorp.com/agent-inject-secret-config: "database/postgres/prod"
        vault.hashicorp.com/agent-inject-template-config: |
          {{- with secret "database/postgres/prod" -}}
          export POSTGRES_DB="{{ .Data.data.database }}"
          export POSTGRES_USER="{{ .Data.data.username }}"
          export POSTGRES_PASSWORD="{{ .Data.data.password }}"
          export PGDATA="/var/lib/postgresql/data/pgdata"
          {{- end }}
        vault.hashicorp.com/agent-pre-populate-only: "true"
    spec:
      serviceAccountName: vault-auth
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
        seccompProfile:
          type: RuntimeDefault
      containers:
        - name: postgres
          image: postgres:16.4-alpine
          ports:
            - containerPort: 5432
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: false
            runAsNonRoot: true
            runAsUser: 999
            runAsGroup: 999
            capabilities:
              drop:
                - ALL
              add:
                - CHOWN
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
          command:
            - /bin/bash
            - -c
            - |
              source /vault/secrets/config
              exec docker-entrypoint.sh postgres
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 6
      volumes:
        - name: postgres-storage
          persistentVolumeClaim:
            claimName: postgres-pvc